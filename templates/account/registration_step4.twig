<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.2/css/bulma.min.css">
    <link rel="stylesheet" href="https://cdn.materialdesignicons.com/4.9.95/css/materialdesignicons.min.css">
    <link href="../views/images/original-logo.jpg" rel="icon" type="image/png">
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/img/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/assets/img/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/assets/img/favicon-16x16.png">
    <link rel="manifest" href="/assets/img/site.webmanifest">
</head>
<body class="">
<!-- NAVBAR -->
<div class="section is-small is-fullheight">
    <div class="container has-text-centered">
        <div class="columns is-centered">
            <div class="column is-three-quarters">
                <div class=" is-spaced">
                    <figure class="image is-64x64" style="margin: 0 auto; border: 2px solid dodgerblue; border-radius: 50%">
                        <img class="is-rounded" src="/assets/img/logo.png">
                    </figure>
                    <h1 class="has-text-left has-text-weight-bold is-size-5 pt-4 pb-4">{{ pageName }}</h1>
                    <form id="paymentMethod" class="" action="" method="post">
                         <div class="columns is-multiline">
                             <div class="column is-6">
                                 <div class="field has-text-left">
                                     <label class="">Bank Account Number</label>
                                     <div class="control">
                                         <input type="text" id="bankAccountNumber" class="input is-normal is-info" name="bank-account-number" placeholder="Enter account number" required>
                                         <small id="accountNumberError" class="has-text-danger"></small>
                                     </div>
                                 </div>
                             </div>
                             <div class="column is-6">
                                 <div class="field has-text-left">
                                     <label class="">Bank Name</label>
                                     <div class="control">
                                         <input type="text" class="input is-normal is-info" id="bank-name" name="bank-name" placeholder="Enter bank name" required>
                                         <small id="bankNameError" class="has-text-danger"></small>
                                     </div>
                                 </div>
                             </div>
                             <div class="column is-12">
                                 <div class="field has-text-left">
                                     <label class="">Branch Name</label>
                                     <div class="control">
                                         <input type="text" class="input is-normal is-info" id="branch-name" name="branch-name" placeholder="Enter branch name" required>
                                         <small id="branchNameError" class="has-text-danger"></small>
                                     </div>
                                 </div>
                             </div>
                             <div class="column is-2">
                                 <div class="field mt-5">
                                     <div class="control">
                                         <div class="buttons">
                                             <button type="submit" name="next" class="button is-normal is-info is-focused is-fullwidth" onclick="showLoadingOverlay(event)">
                                                 <span>Next</span>
                                                 <span class="mdi mdi-chevron-right is-size-3"></span>
                                             </button>
                                         </div>
                                     </div>
                                 </div>
                             </div>
                             <div class="column is-2">
                                 <div class="field mt-5">
                                     <div class="control">
                                         <a href="javascript:history.back()" class="button is-normal is-link is-light">
                                             <span class="icon"><i class="mdi mdi-arrow-left"></i></span>
                                             <span>Back</span>
                                         </a>
                                     </div>
                                 </div>
                             </div>
                         </div>
                    </form>

                    <p class="mt-6">
                        Already have an account? <a href="/">Sign In</a>
                    </p>
                    <hr>
                    <p class="mt-5">All rights reserved, Copyright &copy; {{ "now"|date("Y") }} . Chalom Investments Limited</p>
                    <p><strong>Powered By:</strong> <a href="https://www.fortresshubtechnologies.com" target="_blank">Fortress Hub Technologies</a></p>
                </div>

            </div>

        </div>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    // Toggle mobile navigation menu
    document.addEventListener('DOMContentLoaded', function ()
    {
        var $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

        if ($navbarBurgers.length > 0) {
            $navbarBurgers.forEach(function ($el) {
                $el.addEventListener('click', function () {
                    var target = $el.dataset.target;
                    var $target = document.getElementById(target);
                    $el.classList.toggle('is-active');
                    $target.classList.toggle('is-active');
                });
            });
        }
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const bankAccountNumber = document.getElementById('bankAccountNumber');
        const form = document.getElementById('paymentMethod');
        const bankAccountError = document.getElementById('accountNumberError');
        const submitButton = form.querySelector('button[type="submit"]');
        const bankName = document.getElementById('bank-name');
        const branchName = document.getElementById('branch-name');

        // Validate account number
        const validateAccountNumber = () => {
            const accountNumber = bankAccountNumber.value.trim();
            const accountNumberRegex = /^[0-9]{8,17}$/;

            if (!accountNumberRegex.test(accountNumber)) {
                bankAccountError.textContent = "Invalid bank account number. Please ensure it is between  8 to 17 digits.";
                bankAccountNumber.classList.add('invalid');
                bankAccountNumber.classList.remove('valid');
                bankAccountNumber.style.borderColor = 'red';
                return false;
            } else {
                bankAccountError.textContent = "";
                bankAccountNumber.classList.remove('invalid');
                bankAccountNumber.classList.add('valid');
                bankAccountNumber.style.borderColor = 'green';
                return true;
            }
        };

        const validateBankName = () => {

            const nameInput = bankName.value.trim();
            const errorBankName = document.getElementById('bankNameError');
            if(!nameInput){
                errorBankName.textContent = "Bank Name can not be empty";
                bankName.classList.add('invalid');
                bankName.focus();
                bankName.style.borderColor = 'red';
                return false;
            }else{
                errorBankName.textContent = "";
                bankName.classList.remove('invalid');
                bankName.style.borderColor = 'green';
                return true;
            }
        }

        const validateBranchName = () => {
            const branchNameInput = branchName.value.trim();
            const errorBranchName = document.getElementById('branchNameError');
            if(!branchNameInput){
                errorBranchName.textContent = "Branch Name can not be empty";
                branchName.classList.add('invalid');
                branchName.focus();
                branchName.style.borderColor = 'red';
                return false;
            }else{
                errorBranchName.textContent = "";
                branchName.classList.remove('invalid');
                branchName.style.borderColor = 'green';
                return true;
            }
        }

        bankAccountNumber.addEventListener('blur', validateAccountNumber);
        bankName.addEventListener('blur', validateBankName);
        branchName.addEventListener('blur', validateBranchName);

        // Submit form via fetch
        const showLoadingOverlay = async (event) => {
            event.preventDefault();

            if (!validateAccountNumber() || !validateBankName() || !validateBranchName()) {
                return; // stop submission if validation fails
            }

            const originalBtnHTML = submitButton.innerHTML;
            submitButton.disabled = true;
            submitButton.innerHTML = `<span class="loader"></span> Saving...`;

            const formData = new FormData(form);

            try {
                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    redirect: 'follow'
                });

                if (response.redirected) {
                    window.location.href = response.url;
                } else {
                    const html = await response.text();
                    document.body.innerHTML = html;
                }
            } catch (error) {
                console.error(error);
                alert("Something went wrong.");
                submitButton.disabled = false;
                submitButton.innerHTML = originalBtnHTML;
            }
        };

        // Intercept form submission
        form.addEventListener('submit', showLoadingOverlay);
    });
</script>

<script>
    //    document.addEventListener('DOMContentLoaded', function () {
    //    const paymentMethodSelect = document.getElementById('paymentMethodSelect');
    //    const bankSection = document.getElementById('bankSection');
    //    const mobileMoneySection = document.getElementById('mobileMoneySection');
    //
    //    paymentMethodSelect.addEventListener('change', function () {
    //        // Hide all sections initially
    //        bankSection.style.display = 'none';
    //        mobileMoneySection.style.display = 'none';
    //
    //        // Show the selected section
    //        const selectedOption = paymentMethodSelect.value;
    //        if (selectedOption === 'bank') {
    //            bankSection.style.display = 'block';
    //        } else if (selectedOption === 'mobile-money') {
    //            mobileMoneySection.style.display = 'block';
    //        }
    //    });
    // });

</script>
<script>
    // function showLoadingOverlay(event) {
    //     event.preventDefault();
    //
    //     const form = document.getElementById('paymentMethod');
    //     const button = event.target.closest('button');
    //     const originalBtnHTML = button.innerHTML;
    //
    //     button.disabled = true;
    //     button.innerHTML = `<span class="loader"></span> Saving...`;
    //
    //     const formData = new FormData(form);
    //
    //     fetch(form.action, {
    //         method: 'POST',
    //         body: formData,
    //         redirect: 'follow' // Automatically follow 302 redirect
    //     })
    //         .then(response => {
    //             // If the server responds with a redirect, browser automatically follows
    //             // So if we're here, we're on the next page
    //             if (response.redirected) {
    //                 window.location.href = response.url;
    //             } else {
    //                 return response.text().then(html => {
    //                     // fallback: show any returned HTML (e.g., error page)
    //                     document.body.innerHTML = html;
    //                 });
    //             }
    //         })
    //         .catch(error => {
    //             console.error(error);
    //             alert("Something went wrong.");
    //             button.disabled = false;
    //             button.innerHTML = originalBtnHTML;
    //         });
    // }
</script>
</body>
</html>
<style>
    .error
    {
        background-color: #d50000;
        color: white;
    }
    .error
    {
        color: #d50000;
    }
    #loading-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.8);
        z-index: 1000;
        justify-content: center;
        align-items: center;
    }

    #loading-message {
        font-size: 18px;
    }
</style>