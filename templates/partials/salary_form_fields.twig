<div class="field">
    <label>Employee</label>
    <div class="control">
        <div class="select is-fullwidth is-link">
            <select name="employee_id" id="employeeSelect" class="input" required>
                <option value="">-- Select Employee --</option>
                {% for employee in employees %}
                    <option value="{{ employee.id }}"
                            {% if item.employee_id is defined and item.employee_id == employee.id %}selected{% endif %}>
                        {{ employee.name }}
                    </option>
                {% endfor %}
            </select>
        </div>
    </div>
</div>
<div class="field">
    <label>Basic Pay</label>
    <div class="control">
        <input class="input is-link" type="number" name="basic_pay" value="{{ item.basic_salary ?? '' }}" required>
    </div>
</div>
{#<div class="field">#}
{#    <label>Total Allowance</label>#}
{#    <div class="control">#}
{#        <input class="input is-link" type="number" id="totalAllowances" name="total_allowance"  required readonly>#}
{#    </div>#}
{#</div>#}
{#<div class="field">#}
{#    <label>Total Deductions</label>#}
{#    <div class="control">#}
{#        <input class="input is-link" type="number" id="totalDeductions" name="total_deduction"  required readonly>#}
{#    </div>#}
{#</div>#}
<div class="field">
    <label>Pay Frequency</label>
    <div class="control">
        <div class="select is-fullwidth is-link">
            {% set frequencies = ['Monthly', 'Weekly'] %}
            <select name="pay_frequency" class="input" required>
                <option value="">-- Select Pay Frequency --</option>
                {% for freq in frequencies %}
                    <option value="{{ freq }}"
                            {% if item.pay_frequency|lower == freq|lower %}selected{% endif %}>
                        {{ freq }}
                    </option>
                {% endfor %}
            </select>

        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const employeeSelect = document.getElementById('employeeSelect');
        const totalAllowances = document.getElementById('totalAllowances');
        const totalDeductions = document.getElementById('totalDeductions');

        function fetchTotals(employeeId) {
            if (!employeeId) {
                totalAllowances.value = '';
                totalDeductions.value = '';
                return;
            }

            fetch(`http://pms.zm/payroll/salary/totals/${employeeId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    //console.log(data);
                    totalAllowances.value = data.total_allowance ?? 0;
                    totalDeductions.value = data.total_deductions ?? 0;
                })
                .catch(error => {
                    console.error('Error fetching totals:', error);
                    totalAllowances.value = '';
                    totalDeductions.value = '';
                });
        }

        // Trigger fetch when employee is selected
        employeeSelect.addEventListener('change', function () {
            fetchTotals(this.value);
        });

        // Optional: Auto-fetch if editing existing record
        {% if item.employee_id is defined %}
        fetchTotals('{{ item.employee_id }}');
        {% endif %}
    });
</script>


